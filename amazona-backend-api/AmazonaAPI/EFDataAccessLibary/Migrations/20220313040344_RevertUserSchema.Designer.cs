// <auto-generated />
using System;
using EFDataAccessLibary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFDataAccessLibrary.Migrations
{
    [DbContext(typeof(AmazonaContext))]
    [Migration("20220313040344_RevertUserSchema")]
    partial class RevertUserSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EFDataAccessLibary.Models.Product", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"), 1L, 1);

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("countInStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("createdAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("numReviews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<float>("rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("updatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            _id = 1,
                            brand = "Nike",
                            category = "Shirts",
                            countInStock = 20,
                            description = "A popular shirt",
                            image = "/images/shirt1.jpg",
                            name = "Free Shirt",
                            numReviews = 10,
                            price = 70f,
                            rating = 4.5f,
                            slug = "free-shirt"
                        },
                        new
                        {
                            _id = 2,
                            brand = "Adidas",
                            category = "Shirts",
                            countInStock = 20,
                            description = "A popular shirt",
                            image = "/images/shirt2.jpg",
                            name = "Fit Shirt",
                            numReviews = 10,
                            price = 80f,
                            rating = 4.2f,
                            slug = "fit-shirt"
                        },
                        new
                        {
                            _id = 3,
                            brand = "Raymond",
                            category = "Shirts",
                            countInStock = 20,
                            description = "A popular shirt",
                            image = "/images/shirt3.jpg",
                            name = "Slim Shirt",
                            numReviews = 10,
                            price = 90f,
                            rating = 4.5f,
                            slug = "slim-shirt"
                        },
                        new
                        {
                            _id = 4,
                            brand = "Oliver",
                            category = "Pants",
                            countInStock = 20,
                            description = "Smart looking pants",
                            image = "/images/pants1.jpg",
                            name = "Golf Pants",
                            numReviews = 10,
                            price = 90f,
                            rating = 4.5f,
                            slug = "golf-pants"
                        },
                        new
                        {
                            _id = 5,
                            brand = "Zara",
                            category = "Pants",
                            countInStock = 20,
                            description = "A popular pants",
                            image = "/images/pants2.jpg",
                            name = "Fit Pants",
                            numReviews = 10,
                            price = 95f,
                            rating = 4.5f,
                            slug = "fit-pants"
                        },
                        new
                        {
                            _id = 6,
                            brand = "Casely",
                            category = "Pants",
                            countInStock = 20,
                            description = "A popular pants",
                            image = "/images/pants3.jpg",
                            name = "Classic Pants",
                            numReviews = 10,
                            price = 75f,
                            rating = 4.5f,
                            slug = "classic-pants"
                        });
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.User", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"), 1L, 1);

                    b.Property<DateTime?>("createdAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("isAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("updatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("_id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            _id = 1,
                            email = "admin@example.com",
                            isAdmin = true,
                            name = "John",
                            password = "$2a$13$Pp0.oBDEhN6dCjMYpsTy/e2oERkC4v6Nd2aHHi6Q7G5Mi6Rp.TDGK"
                        },
                        new
                        {
                            _id = 2,
                            email = "user@example.com",
                            isAdmin = false,
                            name = "Jane",
                            password = "$2a$13$dlhvWFO/2vU2AJqwIjeyau4fnFRzQnDYXkmyLAVlGSo3Yo5IV.F6O"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
